buildscript {
    apply from: "../config.gradle"
    repositories {
        mavenLocal()
        mavenCentral()
        google()
    }
    dependencies {
        //classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.android["kotlin_version"]}"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

/**
 * 由于 buildSrc 的执行时机要早于任何一个 project，因此需要⾃⼰添加仓库
 */
repositories {
    mavenLocal()
    mavenCentral()
    google()
}

sourceSets {
    main {
        java {
            srcDirs += []
        }
        kotlin {
            srcDirs += ['src/main/kotlin', 'src/main/java']
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8
}

jar {
    manifest {
        attributes(
                "giokit-plugin-version": rootProject.ext.android.versionName
        )
    }
}


dependencies {
    compileOnly localGroovy()
    compileOnly gradleApi()

    implementation "com.android.tools.build:gradle:${rootProject.ext.android["giokit_plugin_version"]}"
    /* 👇👇👇👇 不再使用didi的booster模块 👇👇👇👇 */
    // api "com.didiglobal.booster:booster-api:${rootProject.ext.android["booster_version"]}"
    // api "com.didiglobal.booster:booster-transform-asm:${rootProject.ext.android["booster_version"]}"
}
// 调试 plugin
// 1. 配置 gradle.properties ,设置host端口
// 2. 运行 $ ./gradlew --stop     # 先停掉 daemon 进程
//         $ ./gradlew --daemon   # 启动 daemon 进程
// 3. Attach daemon 进程  run -> Attach to Process 选择进程
// 4. 放断点
// 5. 运行构建，开始调试 ./gradlew assembleDebug